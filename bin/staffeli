#!/usr/bin/env python3

import argparse, os.path, yaml, canvas, sys, re

from canvas import Canvas

def dir_name(name):
    name = re.sub("[^a-zA-Z0-9-]", '_', name)
    if os.path.exists(name):
        raise Exception(
            "You already got a directory or file named '{}'.\n \
            Please rename or remove this in order to set up TA environment.".format(name))
    return name

def init_course(name):
    c = Canvas()
    course = c.course(name = name.lower())

    course_dir_name = dir_name(name)
    os.mkdir(course_dir_name)
    course.backup(course_dir_name)

#    os.mkdir(os.path.join(course_dir_name, "students"))

#    with open(os.path.join(course_dir_name, "token.txt"), "w") as f:
#        f.write(c.token)

#    json = c.all_students(course.id)
#    students_path = os.path.join(course_dir_name, "students", "students.yaml")
#    with open(students_path, 'w') as f:
#        yaml.dump(json, f, default_flow_style=False, encoding='utf-8')

def init(args):
    if len(args) < 1:
        raise Exception(
            "Please specify a course name.")

    name = args[0]
    init_course(name)

def parse_main_args():
    parser = argparse.ArgumentParser(
        description=
"""
git-style, git-compatible command-line interface for canvas.

start a working area
    init    Create a course directory
""")
    parser.add_argument(
        "action", metavar="ACTION",
        help=
"""
the action to perform
""")
    args, remargs = parser.parse_known_args()
    if args.action == "help":
        parser.print_help()
        sys.exit(0)
    return args.action, remargs

def main():
    action, remargs = parse_main_args()

    if action == "init":
        init(remargs)

if __name__ == "__main__":
    main()
